<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
	<RuntimeIdentifier>win10-x64</RuntimeIdentifier>
	 <PublishSingleFile>false</PublishSingleFile>
	   <PublishTrimmed>false</PublishTrimmed>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ClosedXML" Version="0.94.2" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.0.0" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.0.0" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="5.6.0" />
    <PackageReference Include="System.ServiceModel.Duplex" Version="4.4.*" />
    <PackageReference Include="System.ServiceModel.Http" Version="4.4.*" />
    <PackageReference Include="System.ServiceModel.NetTcp" Version="4.4.*" />
    <PackageReference Include="System.ServiceModel.Security" Version="4.4.*" />
    <PackageReference Include="System.Text.Encoding.CodePages" Version="4.7.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Controllers\WeatherForecastController.cs" />
    <Compile Remove="WeatherForecast.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\enums\formMode.ts" />
    <None Remove="ClientApp\src\app\model\artikal.ts" />
    <None Remove="ClientApp\src\app\model\kategorija.ts" />
    <None Remove="ClientApp\src\app\model\korisnik.ts" />
    <None Remove="ClientApp\src\app\model\partner.ts" />
    <None Remove="ClientApp\src\app\model\ponuda.ts" />
    <None Remove="ClientApp\src\app\model\ponudaDokument.ts" />
    <None Remove="ClientApp\src\app\model\ponudaStavka.ts" />
    <None Remove="ClientApp\src\app\model\webShopServis.ts" />
    <None Remove="ClientApp\src\app\pipes\artikalFlterPipe.ts" />
    <None Remove="ClientApp\src\app\pipes\noCommaPipe.ts" />
    <None Remove="ClientApp\src\app\pipes\ponudaFilterPipe.ts" />
    <None Remove="Ponuda.xlsm" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Shared\Shared.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\enums\formMode.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\kategorija.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\model\artikal.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\model\webShopServis.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\model\korisnik.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\partner.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\ponuda.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\ponudaDokument.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\model\ponudaStavka.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\pipes\noCommaPipe.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\pipes\artikalFlterPipe.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\pipes\ponudaFilterPipe.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\src\assets\img\logout.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\assets\img\memo22.jpg">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="ClientApp\src\assets\img\mosaics-of-delos.jpg">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <WCFMetadata Include="Connected Services" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
